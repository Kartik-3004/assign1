{"version":3,"sources":["components/Start.js","components/Question.js","components/End.js","components/CorrectAnswers.js","App.js","reportWebVitals.js","index.js"],"names":["Start","onQuizStart","className","onClick","Question","data","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","useState","selected","setSelected","error","setError","radiosWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","changeHandler","e","target","value","question","ref","choices","map","choice","i","type","name","onChange","prevState","qs","ans","End","results","onReset","onAnswersCheck","correctAnswers","setCorrectAnswers","correct","forEach","result","index","answer","length","Math","floor","CorrectAnswers","onClose","App","step","setStep","setActiveQuestion","answers","setAnswers","showCorrectAnswers","setShowCorrectAnswers","quizData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70e698e5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Start = ({ onQuizStart }) => {\n    return (\n        <div>\n            <div className=\"card\">\n                <div className=\"card-content\">\n                    <div className=\"content\">\n                        <h1>Are you ready to attempt the quiz?</h1>\n                        <p>Best of Luck!</p>\n                        <button className=\"button is-info is-medium\" onClick={onQuizStart} >Start</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Start;","import React, { useState, useEffect, useRef} from 'react';\n\nconst Question =({ data, onAnswerUpdate, numberOfQuestions, activeQuestion, onSetActiveQuestion, onSetStep }) => {\n    const [selected, setSelected] = useState('');\n    const [error, setError] = useState('');\n    const radiosWrapper = useRef();\n\n    useEffect(() => {\n        const findCheckedInput = radiosWrapper.current.querySelector('input:checked');\n        if(findCheckedInput) {\n            findCheckedInput.checked = false;\n        }\n    }, [data]);\n\n    const changeHandler = (e) => {\n        setSelected(e.target.value);\n        if(error) {\n            setError('');\n        }\n    }\n\n    const nextClickHandler = (e) => {\n        if(selected === '') {\n            return setError('Please select one option!');\n        }\n        onAnswerUpdate(prevState => [...prevState, { qs: data.question, ans: selected }]);\n        setSelected('');\n        if(activeQuestion < numberOfQuestions - 1) {\n            onSetActiveQuestion(activeQuestion + 1);\n        }else {\n        onSetStep(3);\n        }\n    } \n    return(\n        <div className=\"card\">\n            <div className=\"card-content\">\n                <div className=\"content\">\n                    <h2 className=\"mb-5\">\n                        {data.question}\n                    </h2>\n                    <div className=\"control\" ref={radiosWrapper}>\n                        {data.choices.map((choice, i) => (\n                        <label className=\"radio has-background-light\" key={i}>\n                            <input type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler} />\n                            {choice}\n                        </label>\n                        ))}\n                    </div>\n                    {error && <div className=\"has-text-danger\">{error}</div>}\n                    <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler} >Next</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Question;","import React, { useEffect, useState } from 'react';\n\nconst End = ({ results, data, onReset, onAnswersCheck }) => {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  useEffect(() => {\n    let correct = 0;\n    results.forEach((result, index) => {\n      if(result.ans === data[index].answer) {\n        correct++;\n      }\n    });\n    setCorrectAnswers(correct);\n    // eslint-disable-next-line\n  }, []);\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h3>Your results</h3>\n          <p>{correctAnswers} of {data.length}</p>\n          <p><strong>{Math.floor((correctAnswers / data.length) * 100)}%</strong></p>\n          <button className=\"button is-info mr-2\" onClick={onAnswersCheck}>Check your answers</button>\n          <button className=\"button is-success\" onClick={onReset}>Try again</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default End;","import React from 'react';\n\nconst CorrectAnswers = ({ onClose, results, data }) => {\n  return(\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={onClose}></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Your answers</p>\n          <button className=\"delete\" onClick={onClose}></button>\n        </header>\n        <section className=\"modal-card-body content\">\n          <ul>\n            {results.map((result, i) => (\n              <li key={i} className=\"mb-6\">\n                <p><strong>{result.qs}</strong></p>\n                <p className={result.ans === data[i].answer ? 'has-background-success has-text-white p-2' : 'has-background-danger has-text-white p-2'}>Your answer: {result.ans}</p>\n                {result.ans !== data[i].answer && <p className=\"has-background-link has-text-white p-2\">Correct answer: {data[i].answer}</p>}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default CorrectAnswers;","import React, { useState } from 'react';\nimport './App.css';\nimport Start from './components/Start';\nimport Question from './components/Question';\nimport End from './components/End';\nimport quizData from './data/quiz.json';\nimport CorrectAnswers from './components/CorrectAnswers';\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showCorrectAnswers, setShowCorrectAnswers] = useState(false);\n\n  const quizStartHandler = () => {\n    setStep(2);\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n  }\n  return (\n      <div className=\"App\">\n        {step === 1 && <Start onQuizStart={quizStartHandler} />}\n        {step === 2 && <Question \n          data={quizData.data[activeQuestion]}\n          onAnswerUpdate={setAnswers}\n          numberOfQuestions={quizData.data.length}\n          activeQuestion={activeQuestion}\n          onSetActiveQuestion={setActiveQuestion}\n          onSetStep={setStep}\n        />}\n        {step === 3 && <End \n          results={answers}\n          data={quizData.data}\n          onReset={resetClickHandler}\n          onAnswersCheck={() => setShowCorrectAnswers(true)}\n        />}\n        {showCorrectAnswers && <CorrectAnswers \n          onClose={() => setShowCorrectAnswers(false)}\n          results={answers}\n          data={quizData.data}\n        />}\n      </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}